input {
  gelf {}
}
filter {
  grok {
    match => { "message" => "%{GREEDYDATA} Weather for %{DATA:weather_location}:%{GREEDYDATA:weather_response_json} - responseTime=%{GREEDYDATA:response_time_ms}" }
    tag_on_failure => []
  }
  mutate {
    add_field => { "response_time" => "%{response_time_ms}" }
  }
  mutate {
    convert => { "response_time" => "integer" }
  }
  mutate {
    convert => { "response_time_ms" => "integer" }
  }
  json {
    source => "weather_response_json"
    target => "weather"
  }
  ruby {
    code => 'event.set("currentTempF",(event.get("[weather][main][temp]").to_f * 9 / 5 - 459.67).round(2))'
  }
  ruby {
    code => 'event.set("currentTempC",(event.get("[weather][main][temp]").to_f - 273.15).round(2))'
  }
  split {
    field => "[weather][weather]"
  }
  mutate {
    rename => { "[weather][weather][description]" => "weather_description" }
  }
}
output {
  elasticsearch {
        hosts => "http://192.168.33.17:9200"
  }
  stdout {}
}
